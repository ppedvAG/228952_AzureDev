@page "/"
@using Azure.Identity;
@using Azure.Security.KeyVault.Secrets;
@using Azure.Storage.Queues;
@using Azure.Storage.Queues.Models;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<h4>@conString</h4>

<ul>
    @foreach (var f in filenames)
    {
        <li>@f</li>
    }
</ul>

<button class="btn btn-primary" @onclick="AddToQueue">Add to Queue</button>
<button class="btn btn-primary" @onclick="LoadQueue">Load Queue</button>

<p>
    Id: @msg?.MessageId <br />
    Body: @msg?.Body <br />
</p>


@code {

    QueueMessage msg = null;
    void LoadQueue()
    {
        var client = new QueueClient(conString, "myqueue");
        msg = client.ReceiveMessage();
        client.DeleteMessage(msg.MessageId, msg.PopReceipt);
    }

    void AddToQueue()
    {
        for (int i = 0; i < 2; i++)
        {
            var client = new QueueClient(conString, "myqueue");
            var msg = $"[{i}] Hallo Welt, es ist {DateTime.Now:G} Uhr";
            client.SendMessage(msg);
        }
    }

    List<string> filenames = new List<string>();

    string conString = "";

    protected override Task OnInitializedAsync()
    {

        var TenantId = "f290c3d7-ae7e-40aa-8b37-2b9bd0d0d5b9";
        var ClientId = "fdca56ae-8a3e-465f-836c-7cb9a009bc48";
        // var ident = new ClientSecretCredential(TenantId, ClientId, "VXt8Q~F~a.MFaeG_BFErFmz8VjCgb8CObnzICa-G");
        var ident = new DefaultAzureCredential();
        var secretClient = new SecretClient(new Uri("https://mykeyvaultandre.vault.azure.net/"), ident);

        conString = secretClient.GetSecret("StorageConString").Value.Value;


        // var blobClient = new Azure.Storage.Blobs.BlobServiceClient(conString);

        // var blobs = blobClient.GetBlobContainerClient("myfiles").GetBlobs();
        // foreach (var b in blobs)
        // {
        //     filenames.Add(b.Name);
        // }


        return base.OnInitializedAsync();
    }

}

